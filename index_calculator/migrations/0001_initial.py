# Generated by Django 4.1.3 on 2023-01-19 10:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Class",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "classis",
                    models.CharField(
                        help_text="Class the taxon belongs to.", max_length=50
                    ),
                ),
                ("furse_code", models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name="Family",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "familia",
                    models.CharField(
                        help_text="Family the taxon belongs to.", max_length=50
                    ),
                ),
                ("furse_code", models.CharField(max_length=8)),
                (
                    "bmwp_score",
                    models.IntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "whpt_ab1",
                    models.FloatField(null=True, verbose_name="Abundance level 1"),
                ),
                (
                    "whpt_ab2",
                    models.FloatField(null=True, verbose_name="Abundance level 2"),
                ),
                (
                    "whpt_ab3",
                    models.FloatField(null=True, verbose_name="Abundance level 3"),
                ),
                (
                    "whpt_ab4",
                    models.FloatField(null=True, verbose_name="Abundance level 4"),
                ),
                (
                    "whpt_po",
                    models.FloatField(
                        null=True,
                        verbose_name="Values for estimating WHPT from data without abundance information",
                    ),
                ),
                (
                    "classis",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.class",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Genus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "genus",
                    models.CharField(
                        help_text="Genus the taxon belongs to.", max_length=50
                    ),
                ),
                ("furse_code", models.CharField(max_length=8)),
                (
                    "classis",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.class",
                    ),
                ),
                (
                    "familia",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.family",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ordo",
                    models.CharField(
                        help_text="Order the taxon belongs to.", max_length=50
                    ),
                ),
                ("furse_code", models.CharField(max_length=8)),
                (
                    "classis",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.class",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subclass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subclassis",
                    models.CharField(
                        help_text="Subclass the taxon belongs to.", max_length=50
                    ),
                ),
                (
                    "bmwp_score",
                    models.IntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "whpt_ab1",
                    models.FloatField(null=True, verbose_name="Abundance level 1"),
                ),
                (
                    "whpt_ab2",
                    models.FloatField(null=True, verbose_name="Abundance level 2"),
                ),
                (
                    "whpt_ab3",
                    models.FloatField(null=True, verbose_name="Abundance level 3"),
                ),
                (
                    "whpt_ab4",
                    models.FloatField(null=True, verbose_name="Abundance level 4"),
                ),
                (
                    "whpt_po",
                    models.FloatField(
                        null=True,
                        verbose_name="Values for estimating WHPT from data without abundance information",
                    ),
                ),
                (
                    "classis",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.class",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Taxon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "taxon",
                    models.CharField(help_text="Name of the taxon.", max_length=100),
                ),
                ("furse_code", models.CharField(max_length=8, null=True)),
                (
                    "authority",
                    models.CharField(
                        max_length=70,
                        null=True,
                        verbose_name="Author(s) and year when the taxon was first described.",
                    ),
                ),
                ("psi_fssr", models.CharField(max_length=1, null=True)),
                (
                    "epsi_w",
                    models.DecimalField(decimal_places=5, max_digits=6, null=True),
                ),
                (
                    "life_fg",
                    models.IntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
                (
                    "cci_cs",
                    models.IntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "dehli_dis",
                    models.IntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "bmwp_score",
                    models.IntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "classis",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.class",
                    ),
                ),
                (
                    "familia",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.family",
                    ),
                ),
                (
                    "genus",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.genus",
                    ),
                ),
                (
                    "ordo",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.order",
                    ),
                ),
                (
                    "subclassis",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="index_calculator.subclass",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="subclassis",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="index_calculator.subclass",
            ),
        ),
        migrations.AddField(
            model_name="genus",
            name="ordo",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="index_calculator.order",
            ),
        ),
        migrations.AddField(
            model_name="genus",
            name="subclassis",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="index_calculator.subclass",
            ),
        ),
        migrations.AddField(
            model_name="family",
            name="ordo",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="index_calculator.order",
            ),
        ),
        migrations.AddField(
            model_name="family",
            name="subclassis",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="index_calculator.subclass",
            ),
        ),
    ]
